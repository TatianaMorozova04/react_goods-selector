{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","title","selectedGood","selectedGoods","this","length","otherGoods","splice","join","value","setState","prevState","updatedGoods","filter","item","className","getTitle","map","isVisible","includes","type","onClick","getGood","removeGood","clearGoodsSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAQ,CACNC,MAAO,oBACPC,aAAc,GACdC,cAAe,CAAC,KAJpB,8CAOE,WACE,IAAQA,EAAkBC,KAAKJ,MAAvBG,cAER,GAA6B,IAAzBA,EAAcE,OAChB,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBAGF,GAAIA,EAAcE,OAAS,EAAG,CAC5B,IAAMC,EAAa,YAAIH,GAAeI,OAAO,EAAGJ,EAAcE,OAAS,GAAGG,KAAK,MAE/E,MAAM,GAAN,OAAUF,EAAV,aAAyBH,EAAc,GAAvC,gBAAiDA,EAAc,GAA/D,iBAGF,OAA6B,IAAzBA,EAAcE,OACT,GAGH,GAAN,OAAUF,EAAc,GAAxB,kBAxBJ,qBA2BE,SAAQM,GACNL,KAAKM,UAAS,SAACC,GACb,IAAMC,EAAY,sBAAOD,EAAUR,eAAjB,CAAgCM,IAElD,OAAO,2BACFE,GADL,IAEER,cAAeS,SAjCvB,wBAsCE,SAAWH,GACTL,KAAKM,UAAS,SAACC,GACb,IAAMC,EAAeD,EAAUR,cAAcU,QAAO,SAAAC,GAAI,OAAIA,IAASL,KAErE,OAAO,2BACFE,GADL,IAEER,cAAeS,SA5CvB,gCAiDE,WACER,KAAKM,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEET,aAAc,GACdC,cAAe,CAAC,WAtDxB,oBA2DE,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,cAEf,OACE,sBAAKY,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,2BAEG,MACAX,KAAKY,YAAcf,KAEtB,oBAAIc,UAAU,sBAAd,SACGjB,EAAgBmB,KAAI,SAACH,GACpB,IAAMI,EAAYf,EAAcgB,SAASL,GAEzC,OACE,qBAAeC,UAAS,0BAAqBG,GAAa,6BAA1D,UACGJ,GACCI,GAEF,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKC,QAAQR,IAC5BC,UAAU,2CAHZ,iBAQCG,GAED,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKE,WAAWT,IAC/BC,UAAU,8CAHZ,sBAdOD,QA0BdX,EAAcE,OAAS,GAEtB,wBACEe,KAAK,SACLC,QAAS,kBAAM,EAAKG,sBACpBT,UAAU,cAHZ,sBAtGV,GAAyBU,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b082d8f1.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  title: string;\n  selectedGood: string;\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    title: 'No goods selected',\n    selectedGood: '',\n    selectedGoods: [''],\n  };\n\n  getTitle() {\n    const { selectedGoods } = this.state;\n\n    if (selectedGoods.length === 3) {\n      return `${selectedGoods[1]} and ${selectedGoods[2]} are selected`;\n    }\n\n    if (selectedGoods.length > 3) {\n      const otherGoods = [...selectedGoods].splice(3, selectedGoods.length - 1).join(', ');\n\n      return `${otherGoods}, ${selectedGoods[1]} and ${selectedGoods[2]} are selected`;\n    }\n\n    if (selectedGoods.length === 1) {\n      return '';\n    }\n\n    return `${selectedGoods[1]} is selected`;\n  }\n\n  getGood(value: string) {\n    this.setState((prevState): State => {\n      const updatedGoods = [...prevState.selectedGoods, value];\n\n      return {\n        ...prevState,\n        selectedGoods: updatedGoods,\n      };\n    });\n  }\n\n  removeGood(value: string) {\n    this.setState((prevState): State => {\n      const updatedGoods = prevState.selectedGoods.filter(item => item !== value);\n\n      return {\n        ...prevState,\n        selectedGoods: updatedGoods,\n      };\n    });\n  }\n\n  clearGoodsSelected() {\n    this.setState((prevState): State => {\n      return {\n        ...prevState,\n        selectedGood: '',\n        selectedGoods: [''],\n      };\n    });\n  }\n\n  render() {\n    const { title, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Selected good:\n          {' - '}\n          {this.getTitle() || title}\n        </h1>\n        <ul className=\"App__list goodsList\">\n          {goodsFromServer.map((item) => {\n            const isVisible = selectedGoods.includes(item);\n\n            return (\n              <li key={item} className={`goodsList__item ${isVisible && 'goodsList__item--selected'}`}>\n                {item}\n                {!isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.getGood(item)}\n                  className=\"goodsList__button goodsList__button--add\"\n                >\n                  Add\n                </button>\n              )}\n                {isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.removeGood(item)}\n                  className=\"goodsList__button goodsList__button--remove\"\n                >\n                  Remove\n                </button>\n              )}\n              </li>\n            );\n          })}\n        </ul>\n        {selectedGoods.length > 1\n        && (\n          <button\n            type=\"button\"\n            onClick={() => this.clearGoodsSelected()}\n            className=\"App__button\"\n          >\n            X\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}