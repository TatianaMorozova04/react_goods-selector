{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","length","splice","join","value","setState","prevState","filter","item","className","getTitle","map","isVisible","includes","type","onClick","getGood","removeGood","clearGoodsSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,CAAC,QAFpB,8CAKE,WACE,IAAQA,EAAkBC,KAAKF,MAAvBC,cAER,OAAQA,EAAcE,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUF,EAAc,GAAxB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAAc,GAAxB,gBAAkCA,EAAc,GAAhD,iBACF,QACE,MAAM,GAAN,OAAU,YAAIA,GACXG,OAAO,EAAGH,EAAcE,OAAS,GACjCE,KAAK,MAFR,aAEkBJ,EAAc,GAFhC,gBAE0CA,EAAc,GAFxD,oBAhBR,qBAsBE,SAAQK,GACNJ,KAAKK,UAAS,SAACC,GACb,MAAO,CACLP,cAAc,GAAD,mBAAMO,EAAUP,eAAhB,CAA+BK,UAzBpD,wBA8BE,SAAWA,GACTJ,KAAKK,UAAS,SAACC,GACb,MAAO,CACLP,cAAeO,EAAUP,cAAcQ,QAAO,SAAAC,GAAI,OAAIA,IAASJ,WAjCvE,gCAsCE,WACEJ,KAAKK,SAAS,CACZN,cAAe,OAxCrB,oBA4CE,WAAU,IAAD,OACCA,EAAkBC,KAAKF,MAAvBC,cAER,OACE,sBAAKU,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,oCACuBT,KAAKU,cAE5B,oBAAID,UAAU,sBAAd,SACGb,EAAgBe,KAAI,SAACH,GACpB,IAAMI,EAAYb,EAAcc,SAASL,GAEzC,OACE,qBAAeC,UAAS,0BAAqBG,GAAa,6BAA1D,UACGJ,GACCI,GAEF,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKC,QAAQR,IAC5BC,UAAU,2CAHZ,iBAQCG,GAED,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKE,WAAWT,IAC/BC,UAAU,8CAHZ,sBAdOD,QA0BdT,EAAcE,OAAS,GAEtB,wBACEa,KAAK,SACLC,QAAS,kBAAM,EAAKG,sBACpBT,UAAU,cAHZ,sBArFV,GAAyBU,IAAMC,WCjB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d1ac9f24.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  getTitle() {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      case 2:\n        return `${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n      default:\n        return `${[...selectedGoods]\n          .splice(3, selectedGoods.length - 1)\n          .join(', ')}, ${selectedGoods[0]} and ${selectedGoods[1]} are selected`;\n    }\n  }\n\n  getGood(value: string) {\n    this.setState((prevState): State => {\n      return {\n        selectedGoods: [...prevState.selectedGoods, value],\n      };\n    });\n  }\n\n  removeGood(value: string) {\n    this.setState((prevState): State => {\n      return {\n        selectedGoods: prevState.selectedGoods.filter(item => item !== value),\n      };\n    });\n  }\n\n  clearGoodsSelected() {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          {`Selected good: - ${this.getTitle()}`}\n        </h1>\n        <ul className=\"App__list goodsList\">\n          {goodsFromServer.map((item) => {\n            const isVisible = selectedGoods.includes(item);\n\n            return (\n              <li key={item} className={`goodsList__item ${isVisible && 'goodsList__item--selected'}`}>\n                {item}\n                {!isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.getGood(item)}\n                  className=\"goodsList__button goodsList__button--add\"\n                >\n                  Add\n                </button>\n              )}\n                {isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.removeGood(item)}\n                  className=\"goodsList__button goodsList__button--remove\"\n                >\n                  Remove\n                </button>\n              )}\n              </li>\n            );\n          })}\n        </ul>\n        {selectedGoods.length > 0\n        && (\n          <button\n            type=\"button\"\n            onClick={() => this.clearGoodsSelected()}\n            className=\"App__button\"\n          >\n            X\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}