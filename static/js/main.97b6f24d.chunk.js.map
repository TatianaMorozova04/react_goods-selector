{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","title","selectedGood","selectedGoods","value","this","setState","prevState","updatedGoods","addTitle","length","otherGoods","splice","join","filter","item","className","map","isVisible","includes","type","onClick","getGood","removeGood","clearGoodsSelected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASWC,EAAb,4MACEC,MAAQ,CACNC,MAAO,oBACPC,aAAc,GACdC,cAAe,CAAC,KAJpB,6CAOE,SAAQC,GACNC,KAAKC,UAAS,SAACC,GACb,IAAMC,EAAY,sBAAOD,EAAUJ,eAAjB,CAAgCC,IAC9CK,EAAQ,UAAML,EAAN,gBAMZ,GAJ4B,IAAxBI,EAAaE,SACfD,EAAQ,UAAMD,EAAa,GAAnB,gBAA6BA,EAAa,GAA1C,kBAGNA,EAAaE,OAAS,EAAG,CAC3B,IAAMC,EAAa,YAAIH,GAAcI,OAAO,EAAGJ,EAAaE,OAAS,GAAGG,KAAK,MAE7EJ,EAAQ,UAAME,EAAN,aAAqBH,EAAa,GAAlC,gBAA4CA,EAAa,GAAzD,iBAGV,OAAO,2BACFD,GADL,IAEEL,aAAcO,EACdN,cAAeK,SAzBvB,wBA8BE,SAAWJ,GACTC,KAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEL,aAAc,GACdC,cAAeI,EAAUJ,cAAcW,QAAO,SAAAC,GAAI,OAAIA,IAASX,YAnCvE,gCAwCE,WACEC,KAAKC,UAAS,SAACC,GACb,OAAO,2BACFA,GADL,IAEEL,aAAc,GACdC,cAAe,CAAC,WA7CxB,oBAkDE,WAAU,IAAD,OACP,EAA+CE,KAAKL,MAA5CC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,cAE7B,OACE,sBAAKa,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAd,2BAEG,MACAd,GAAgBD,KAEnB,oBAAIe,UAAU,sBAAd,SACGlB,EAAgBmB,KAAI,SAACF,GACpB,IAAMG,EAAYf,EAAcgB,SAASJ,GAEzC,OACE,qBAAeC,UAAS,0BAAqBE,GAAa,6BAA1D,UACGH,GACCG,GAEF,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKC,QAAQP,IAC5BC,UAAU,2CAHZ,iBAQCE,GAED,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKE,WAAWR,IAC/BC,UAAU,8CAHZ,sBAdOD,QA0BdZ,EAAcO,OAAS,GAEtB,wBACEU,KAAK,SACLC,QAAS,kBAAM,EAAKG,sBACpBR,UAAU,cAHZ,sBA7FV,GAAyBS,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.97b6f24d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  title: string;\n  selectedGood: string;\n  selectedGoods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    title: 'No goods selected',\n    selectedGood: '',\n    selectedGoods: [''],\n  };\n\n  getGood(value: string) {\n    this.setState((prevState): State => {\n      const updatedGoods = [...prevState.selectedGoods, value];\n      let addTitle = `${value} is selected`;\n\n      if (updatedGoods.length === 3) {\n        addTitle = `${updatedGoods[1]} and ${updatedGoods[2]} are selected`;\n      }\n\n      if (updatedGoods.length > 3) {\n        const otherGoods = [...updatedGoods].splice(3, updatedGoods.length - 1).join(', ');\n\n        addTitle = `${otherGoods}, ${updatedGoods[1]} and ${updatedGoods[2]} are selected`;\n      }\n\n      return {\n        ...prevState,\n        selectedGood: addTitle,\n        selectedGoods: updatedGoods,\n      };\n    });\n  }\n\n  removeGood(value: string) {\n    this.setState((prevState): State => {\n      return {\n        ...prevState,\n        selectedGood: '',\n        selectedGoods: prevState.selectedGoods.filter(item => item !== value),\n      };\n    });\n  }\n\n  clearGoodsSelected() {\n    this.setState((prevState): State => {\n      return {\n        ...prevState,\n        selectedGood: '',\n        selectedGoods: [''],\n      };\n    });\n  }\n\n  render() {\n    const { title, selectedGood, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">\n          Selected good:\n          {' - '}\n          {selectedGood || title}\n        </h1>\n        <ul className=\"App__list goodsList\">\n          {goodsFromServer.map((item) => {\n            const isVisible = selectedGoods.includes(item);\n\n            return (\n              <li key={item} className={`goodsList__item ${isVisible && 'goodsList__item--selected'}`}>\n                {item}\n                {!isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.getGood(item)}\n                  className=\"goodsList__button goodsList__button--add\"\n                >\n                  Add\n                </button>\n              )}\n                {isVisible\n              && (\n                <button\n                  type=\"button\"\n                  onClick={() => this.removeGood(item)}\n                  className=\"goodsList__button goodsList__button--remove\"\n                >\n                  Remove\n                </button>\n              )}\n              </li>\n            );\n          })}\n        </ul>\n        {selectedGoods.length > 1\n        && (\n          <button\n            type=\"button\"\n            onClick={() => this.clearGoodsSelected()}\n            className=\"App__button\"\n          >\n            X\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}